
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'EQ GE GT IF LBRACE LE LPAREN LT NEQ NUMERIC PRINT RBRACE RPAREN SEMICOLON STRINGstatement : IF LPAREN condition RPAREN LBRACE body RBRACEcondition :  expression GT expression\n                         | expression LT expression\n                         | expression GE expression\n                         | expression LE expression\n                         | expression EQ expression\n                         | expression NEQ expressionexpression : NUMERIC\n                          | expression GT expression\n                          | expression LT expression\n                          | expression GE expression\n                          | expression LE expression\n                          | expression EQ expression\n                          | expression NEQ expressionbody : PRINT LPAREN STRING RPAREN SEMICOLON\n                    | PRINT LPAREN NUMERIC RPAREN SEMICOLON\n                    | LBRACE error RBRACE'
    
_lr_action_items = {'IF':([0,],[2,]),'$end':([1,31,],[0,-1,]),'LPAREN':([2,23,],[3,32,]),'NUMERIC':([3,8,9,10,11,12,13,24,25,26,27,28,29,32,],[6,6,6,6,6,6,6,6,6,6,6,6,6,41,]),'RPAREN':([4,6,15,16,17,18,19,20,33,34,35,36,37,38,40,41,],[7,-8,-2,-3,-4,-5,-6,-7,-9,-10,-11,-12,-13,-14,42,43,]),'GT':([5,6,15,16,17,18,19,20,33,34,35,36,37,38,],[8,-8,24,24,24,24,24,24,24,24,24,24,24,24,]),'LT':([5,6,15,16,17,18,19,20,33,34,35,36,37,38,],[9,-8,25,25,25,25,25,25,25,25,25,25,25,25,]),'GE':([5,6,15,16,17,18,19,20,33,34,35,36,37,38,],[10,-8,26,26,26,26,26,26,26,26,26,26,26,26,]),'LE':([5,6,15,16,17,18,19,20,33,34,35,36,37,38,],[11,-8,27,27,27,27,27,27,27,27,27,27,27,27,]),'EQ':([5,6,15,16,17,18,19,20,33,34,35,36,37,38,],[12,-8,28,28,28,28,28,28,28,28,28,28,28,28,]),'NEQ':([5,6,15,16,17,18,19,20,33,34,35,36,37,38,],[13,-8,29,29,29,29,29,29,29,29,29,29,29,29,]),'LBRACE':([7,14,],[14,21,]),'PRINT':([14,],[23,]),'error':([21,],[30,]),'RBRACE':([22,30,39,44,45,],[31,39,-17,-15,-16,]),'STRING':([32,],[40,]),'SEMICOLON':([42,43,],[44,45,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'condition':([3,],[4,]),'expression':([3,8,9,10,11,12,13,24,25,26,27,28,29,],[5,15,16,17,18,19,20,33,34,35,36,37,38,]),'body':([14,],[22,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> IF LPAREN condition RPAREN LBRACE body RBRACE','statement',7,'p_if_statement','sintactico.py',55),
  ('condition -> expression GT expression','condition',3,'p_condition_numeric','sintactico.py',59),
  ('condition -> expression LT expression','condition',3,'p_condition_numeric','sintactico.py',60),
  ('condition -> expression GE expression','condition',3,'p_condition_numeric','sintactico.py',61),
  ('condition -> expression LE expression','condition',3,'p_condition_numeric','sintactico.py',62),
  ('condition -> expression EQ expression','condition',3,'p_condition_numeric','sintactico.py',63),
  ('condition -> expression NEQ expression','condition',3,'p_condition_numeric','sintactico.py',64),
  ('expression -> NUMERIC','expression',1,'p_expression','sintactico.py',67),
  ('expression -> expression GT expression','expression',3,'p_expression','sintactico.py',68),
  ('expression -> expression LT expression','expression',3,'p_expression','sintactico.py',69),
  ('expression -> expression GE expression','expression',3,'p_expression','sintactico.py',70),
  ('expression -> expression LE expression','expression',3,'p_expression','sintactico.py',71),
  ('expression -> expression EQ expression','expression',3,'p_expression','sintactico.py',72),
  ('expression -> expression NEQ expression','expression',3,'p_expression','sintactico.py',73),
  ('body -> PRINT LPAREN STRING RPAREN SEMICOLON','body',5,'p_body','sintactico.py',76),
  ('body -> PRINT LPAREN NUMERIC RPAREN SEMICOLON','body',5,'p_body','sintactico.py',77),
  ('body -> LBRACE error RBRACE','body',3,'p_body','sintactico.py',78),
]
